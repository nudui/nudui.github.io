<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>受命于天</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nudui.github.io/"/>
  <updated>2016-11-16T09:24:44.000Z</updated>
  <id>http://nudui.github.io/</id>
  
  <author>
    <name>受命于天</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang笔记-1-类型</title>
    <link href="http://nudui.github.io/2016/11/16/golang%E7%AC%94%E8%AE%B0-1-%E7%B1%BB%E5%9E%8B/"/>
    <id>http://nudui.github.io/2016/11/16/golang笔记-1-类型/</id>
    <published>2016-11-16T07:06:29.000Z</published>
    <updated>2016-11-16T09:24:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="golang笔记-1-类型"><a href="#golang笔记-1-类型" class="headerlink" title="golang笔记-1-类型"></a>golang笔记-1-类型</h1><h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><p>Go语言强制了编码风格。<br>1，任何需要<strong>对外暴露</strong>的名字必须以<strong>大写字母</strong>开头，不需要对外暴露的则应该以<strong>小写 字母</strong>开头。<br>2，Go语言明确宣告了拥护骆驼命名法而排斥下划线法。<br>3，”{}”，左括号禁止单开一行。<br>4，gotool中包含了一个代码格式化的功能。命令：go fmt hello.go，自动格式化。</p>
<h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h2><pre><code>略过
</code></pre><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><table>
<thead>
<tr>
<th>类型</th>
<th style="text-align:center">取值</th>
</tr>
</thead>
<tbody>
<tr>
<td>int8</td>
<td style="text-align:center">-128~127</td>
</tr>
<tr>
<td>int16</td>
<td style="text-align:center">-32768~32767</td>
</tr>
<tr>
<td>int32</td>
<td style="text-align:center">-2147483648~2147483647</td>
</tr>
<tr>
<td>int64</td>
<td style="text-align:center">-9223372036854775808~9223372036854775807</td>
</tr>
<tr>
<td>uint…</td>
<td style="text-align:center">非负数，与上述对应 uint8:0~255</td>
</tr>
<tr>
<td>float32</td>
<td style="text-align:center">+- 1e-45 -&gt; +- 3.4 * 1e38</td>
</tr>
<tr>
<td>float64</td>
<td style="text-align:center">+- 5 <em> 1e-324 -&gt; 107 </em> 1e308</td>
</tr>
</tbody>
</table>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>局部变量不允许只声明不使用!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//正确的声明</div><div class="line">var x int</div><div class="line">var x int = 3</div><div class="line">var x = 3</div><div class="line">var&#123;</div><div class="line">  x = 3</div><div class="line">  y = 4</div><div class="line">&#125;</div><div class="line">x := 3  //仅限于在函数中。</div><div class="line">x , y := 3 , 4</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">func x() &#123;</div><div class="line">  var x = 3</div><div class="line">  x := 3  //错误，:=用于声明 + 赋值 ，x已经声明过了，不能再次声明 ， 只能赋值。</div><div class="line">  x , y := 1 , 4 //正确 ， y为新变量，此时:=对于x降级为赋值。必须有至少一个新的变量方可。</div><div class="line">&#125;</div><div class="line">退化赋值的前提条件：至少有一个新的变量被定义，且必须是同一作用域。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 3</div><div class="line">func x()&#123;</div><div class="line">  x := 4 //正确，此时的x与函数外的x作用域不同，相当于一个新的变量。</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="多变量"><a href="#多变量" class="headerlink" title="多变量"></a>多变量</h2><p>在进行多变量赋值时，先计算右侧的所有值，然后完成赋值操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func main()&#123;</div><div class="line">  a , b := 1 , 2</div><div class="line">  a , b = a + 1 : b + 1</div><div class="line">  fmt.Println(a , b) //结果：2 ，3</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">func exchange(a , b int) (int,int)&#123;</div><div class="line">  a , b = b , a</div><div class="line">  return a , b</div><div class="line">&#125;</div><div class="line">func main()&#123;</div><div class="line">  //只想使用b</div><div class="line">  _ , b = exchange(1 , 2)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>运行时恒定不变的，编译期间能确定值！<br>可在函数内定义，允许只定义不使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">显式类型定义： const b string = &quot;abc&quot;</div><div class="line">隐式类型定义： const b = &quot;abc&quot;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">正确的做法：const c1 = 2/3</div><div class="line">错误的做法：const c2 = getNumber() // 引发构建错误: getNumber() used as value</div></pre></td></tr></table></figure>
<h2 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h2><p>严格来说这并非go语言的一个类型，字符只是证书的特殊用例。byte 类型是 uint8 的别名，对于只占用 1 个字节的传统 ASCII 编码的字符来说，完全没有问题。</p>
<p>例如：<code>var ch byte = &#39;A&#39;</code>字符使用单引号括起来。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">判断是否为字母：unicode.IsLetter(ch)</div><div class="line">判断是否为数字：unicode.IsDigit(ch)</div><div class="line">判断是否为空白符号：unicode.IsSpace(ch)</div><div class="line">这些函数返回一个布尔值。</div></pre></td></tr></table></figure>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><pre><code>字符串是UTF-8的一个序列（当字符为ASCII码时占一个字节，其他字符需要2-4个字节）。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;golang笔记-1-类型&quot;&gt;&lt;a href=&quot;#golang笔记-1-类型&quot; class=&quot;headerlink&quot; title=&quot;golang笔记-1-类型&quot;&gt;&lt;/a&gt;golang笔记-1-类型&lt;/h1&gt;&lt;h2 id=&quot;命名&quot;&gt;&lt;a href=&quot;#命名&quot; cla
    
    </summary>
    
      <category term="golang" scheme="http://nudui.github.io/categories/golang/"/>
    
    
      <category term="golang" scheme="http://nudui.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>文档在线预览方案</title>
    <link href="http://nudui.github.io/2016/10/05/%E6%96%87%E6%A1%A3%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88%E6%96%B9%E6%A1%88/"/>
    <id>http://nudui.github.io/2016/10/05/文档在线预览方案/</id>
    <published>2016-10-05T02:33:49.000Z</published>
    <updated>2016-11-16T09:23:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>如word文档在线预览，转换为html进行展示。</p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="1，poi"><a href="#1，poi" class="headerlink" title="1，poi"></a>1，poi</h3><pre><code>不到万不得已不建议使用，很难转换完美。
</code></pre><h3 id="2，七牛"><a href="#2，七牛" class="headerlink" title="2，七牛"></a>2，七牛</h3><pre><code>（1）七牛第三方文档转换服务，收费，但不高，api不易懂。

（2）七牛自带转换服务。参考http://developer.qiniu.com/docs/v6/api/reference/fop/odconv.html。在文档url后拼接  ?odconv/pdf  
 缺点：此api在七牛官网无入口，可能是七牛即将弃用的服务，毕竟有了收费的第三方文档服务。
</code></pre><h3 id="3，某些专做文档服务的服务商"><a href="#3，某些专做文档服务的服务商" class="headerlink" title="3，某些专做文档服务的服务商"></a>3，某些专做文档服务的服务商</h3><pre><code>譬如idocv，其为了销售开放了试用接口http://api.idocv.com/view/url?url=，幸甚使用此接口免费，正好符合需求。
缺点：1，数据（文档）安全性。   
     2，如过多调用，会引起对方警觉，可能屏蔽ip。
</code></pre><h3 id="4，其他网上方案："><a href="#4，其他网上方案：" class="headerlink" title="4，其他网上方案："></a>4，其他网上方案：</h3><blockquote>
<p>activexobject，此js对象仅支持ie浏览器，且需要用户在浏览器上设置诸多选项。</p>
<p>百度文库。百度要求文档必须上传到文库。</p>
<p>其他方案已忘记，要么是系统局限，要么是操作繁琐，总之弃用。</p>
</blockquote>
<h3 id="5，根据2、3得到的html，可通过iframe进行展示。"><a href="#5，根据2、3得到的html，可通过iframe进行展示。" class="headerlink" title="5，根据2、3得到的html，可通过iframe进行展示。"></a>5，根据2、3得到的html，可通过iframe进行展示。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;如word文档在线预览，转换为html进行展示。&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;headerli
    
    </summary>
    
      <category term="方案" scheme="http://nudui.github.io/categories/%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="word在线预览" scheme="http://nudui.github.io/tags/word%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88/"/>
    
  </entry>
  
  <entry>
    <title>tomcat加载两次spring</title>
    <link href="http://nudui.github.io/2016/07/16/tomcat%E5%8A%A0%E8%BD%BD%E4%B8%A4%E6%AC%A1spring/"/>
    <id>http://nudui.github.io/2016/07/16/tomcat加载两次spring/</id>
    <published>2016-07-16T07:57:16.000Z</published>
    <updated>2016-11-16T09:25:04.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1，为了达到通过ip：端口进行访问-，做了如下配置："><a href="#1，为了达到通过ip：端口进行访问-，做了如下配置：" class="headerlink" title="1，为了达到通过ip：端口进行访问 ，做了如下配置："></a>1，为了达到通过ip：端口进行访问 ，做了如下配置：</h3><p> <img src="http://img.blog.csdn.net/20160823131643542?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h3 id="2，然而，host标签加载一次webapps里面的项目-，-context标签加载一次docbase的项目，于是造成了两次加载。"><a href="#2，然而，host标签加载一次webapps里面的项目-，-context标签加载一次docbase的项目，于是造成了两次加载。" class="headerlink" title="2，然而，host标签加载一次webapps里面的项目 ， context标签加载一次docbase的项目，于是造成了两次加载。"></a>2，然而，host标签加载一次webapps里面的项目 ， context标签加载一次docbase的项目，于是造成了两次加载。</h3><h3 id="3，解决办法：在host标签加一个-deployIgnore-”-项目名-“-，-这样，host就不会加载。"><a href="#3，解决办法：在host标签加一个-deployIgnore-”-项目名-“-，-这样，host就不会加载。" class="headerlink" title="3，解决办法：在host标签加一个 deployIgnore=”.项目名.“ ， 这样，host就不会加载。"></a>3，解决办法：在host标签加一个 deployIgnore=”.<em>项目名.</em>“ ， 这样，host就不会加载。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1，为了达到通过ip：端口进行访问-，做了如下配置：&quot;&gt;&lt;a href=&quot;#1，为了达到通过ip：端口进行访问-，做了如下配置：&quot; class=&quot;headerlink&quot; title=&quot;1，为了达到通过ip：端口进行访问 ，做了如下配置：&quot;&gt;&lt;/a&gt;1，为了达到通过
    
    </summary>
    
      <category term="疑难杂症" scheme="http://nudui.github.io/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
    
      <category term="tomcat spring 疑难杂症" scheme="http://nudui.github.io/tags/tomcat-spring-%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
  </entry>
  
  <entry>
    <title>让mysql支持表情</title>
    <link href="http://nudui.github.io/2016/06/16/%E8%AE%A9mysql%E6%94%AF%E6%8C%81%E8%A1%A8%E6%83%85/"/>
    <id>http://nudui.github.io/2016/06/16/让mysql支持表情/</id>
    <published>2016-06-16T08:00:57.000Z</published>
    <updated>2016-11-16T09:22:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1，修改-etc-my-cnf"><a href="#1，修改-etc-my-cnf" class="headerlink" title="1，修改 /etc/my.cnf"></a>1，修改 /etc/my.cnf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[client] </div><div class="line">default-character-set = utf8mb4</div><div class="line"></div><div class="line">[mysql] </div><div class="line">default-character-set = utf8mb4</div><div class="line"></div><div class="line">[mysqld] </div><div class="line">character-set-client-handshake = FALSE </div><div class="line">character-set-server = utf8mb4 </div><div class="line">collation-server = utf8mb4_unicode_ci </div><div class="line">init_connect=&apos;SET NAMES utf8mb4&apos;</div></pre></td></tr></table></figure>
<h3 id="2，代码中"><a href="#2，代码中" class="headerlink" title="2，代码中"></a>2，代码中</h3><p>tomcat 6 + 、jetty 6 + 均在内部支持emoji，无须做任何代码上的修改即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1，修改-etc-my-cnf&quot;&gt;&lt;a href=&quot;#1，修改-etc-my-cnf&quot; class=&quot;headerlink&quot; title=&quot;1，修改 /etc/my.cnf&quot;&gt;&lt;/a&gt;1，修改 /etc/my.cnf&lt;/h3&gt;&lt;figure class=&quot;high
    
    </summary>
    
      <category term="mysql" scheme="http://nudui.github.io/categories/mysql/"/>
    
    
      <category term="mysql emoji" scheme="http://nudui.github.io/tags/mysql-emoji/"/>
    
  </entry>
  
  <entry>
    <title>api接口规则</title>
    <link href="http://nudui.github.io/2016/05/16/api%E6%8E%A5%E5%8F%A3%E8%A7%84%E5%88%99/"/>
    <id>http://nudui.github.io/2016/05/16/api接口规则/</id>
    <published>2016-05-16T08:07:48.000Z</published>
    <updated>2016-11-16T09:24:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1，在header中加入参数"><a href="#1，在header中加入参数" class="headerlink" title="1，在header中加入参数"></a>1，在header中加入参数</h3><pre><code>&quot;info&quot; : {
      &quot;appnm&quot; : &quot;XXX&quot;, （app name）
      &quot;appVer&quot; : &quot;1.0.0&quot;,    （app版本）
      &quot;clientType&quot; : &quot;ios&quot;,   （系统类型）
      &quot;os&quot; : &quot;iPhone OS 10.0.3&quot;,（系统版本）
      &quot;model&quot; : &quot;iPhone Simulator&quot;,（手机型号）
      &quot;screen&quot; : &quot;320x568&quot;,（屏幕分辨）
      &quot;channel&quot; : &quot;app_store&quot;,
      &quot;did&quot; : &quot;E96B0235-F60C-49F4-B2F9-F1B1041C7E51&quot;（设备号）
}
&quot;auth&quot; : {
      &quot;auth&quot;: &quot;audbbiuf7q74asdh8fa0s9dqjashdugfasd&quot;, （用户唯一标识，如有则认为已登录）
      &quot;sign&quot;: &quot;fad22321acbd122121&quot;,  （签名）
      &quot;ts&quot; : &quot;1231231283213&quot;（时间戳）
      &quot;rand&quot; : &quot;12121212&quot;（一个随机数）
 }    
</code></pre><h3 id="2，url签名算法："><a href="#2，url签名算法：" class="headerlink" title="2，url签名算法："></a>2，url签名算法：</h3><pre><code>1，sign = MD5 ( url + ts + &quot;自定义一个key&quot; )
2，url：去除域名部分，例如  http://api.xxx.com/aaa/bbb/ccc?p=1      ===&gt;    /aaa/bbb/ccc?p=1  
3，服务端每次请求必须校验sign 
</code></pre><h3 id="3，备注："><a href="#3，备注：" class="headerlink" title="3，备注："></a>3，备注：</h3><pre><code>1，在与服务端交互的每个请求，header均须加上1中参数。
2，接口服务端返回为json类型，且json中数据类型全部为string。
3，请求参数使用【下划线】类型 ， 数据返回使用【驼峰】，URL使用【下划线】
4，如果sign不正确，服务端不处理该请求
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1，在header中加入参数&quot;&gt;&lt;a href=&quot;#1，在header中加入参数&quot; class=&quot;headerlink&quot; title=&quot;1，在header中加入参数&quot;&gt;&lt;/a&gt;1，在header中加入参数&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;quot;info&amp;quo
    
    </summary>
    
      <category term="app-api" scheme="http://nudui.github.io/categories/app-api/"/>
    
    
      <category term="api app 接口规则" scheme="http://nudui.github.io/tags/api-app-%E6%8E%A5%E5%8F%A3%E8%A7%84%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>app登录注册方案</title>
    <link href="http://nudui.github.io/2016/05/16/app%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%96%B9%E6%A1%88/"/>
    <id>http://nudui.github.io/2016/05/16/app登录注册方案/</id>
    <published>2016-05-16T08:04:45.000Z</published>
    <updated>2016-11-16T09:24:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="与web开发不同点"><a href="#与web开发不同点" class="headerlink" title="与web开发不同点"></a>与web开发不同点</h3><pre><code>web中有浏览器角色，保持用户登录状态可以根据cookie、sessionid等策略来实现。而app不能（或不方便、不能自定义内容），开发者需要进行面向app的模拟session实现。
</code></pre><h3 id="借助工具"><a href="#借助工具" class="headerlink" title="借助工具"></a>借助工具</h3><pre><code>memcached\redis或其他进程外缓存。
</code></pre><p>###实现过程<br>    1，在db中创建auth表，须包含字段：id , userid(或mobile), auth , createtime。<br>    2，注册时，user表中添加数据后，auth表中也添加记录，auth可自行选择加密方案。<br>    3，登录时：<br>            1，user表中查找成功。<br>            2，服务端从db中获取auth，放入缓存中。<br>            3，将auth返回给移动端。<br>    4，移动端每次请求服务端，均须将auth信息放入header中。服务端在拦截器中校验auth（先从缓存中取，如无则取db，然后放入缓存）是否正确、定位是哪个用户。</p>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><pre><code>1，web中默认未登录状态。移动端默认为登录状态（每次打开app只要有auth信息就默认为登录）。
2，在缓存中，auth要设有效时长。
3，缓存中的数据结构为  auth:userid(mobile)。
4，当下多数app将注册与登录合二为一，使用手机号+短信验证码实现注册即登录，此时实现方案应相应作出修改，在此不述。
5，web开发也可类似上述方案进行开发，不使用httpsession，原因不述。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;与web开发不同点&quot;&gt;&lt;a href=&quot;#与web开发不同点&quot; class=&quot;headerlink&quot; title=&quot;与web开发不同点&quot;&gt;&lt;/a&gt;与web开发不同点&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;web中有浏览器角色，保持用户登录状态可以根据cookie、sess
    
    </summary>
    
      <category term="app-api" scheme="http://nudui.github.io/categories/app-api/"/>
    
    
      <category term="app auth" scheme="http://nudui.github.io/tags/app-auth/"/>
    
  </entry>
  
  <entry>
    <title>邮箱消息嵌入到web系统</title>
    <link href="http://nudui.github.io/2015/10/10/%E9%82%AE%E7%AE%B1%E6%B6%88%E6%81%AF%E5%B5%8C%E5%85%A5%E5%88%B0web%E7%B3%BB%E7%BB%9F/"/>
    <id>http://nudui.github.io/2015/10/10/邮箱消息嵌入到web系统/</id>
    <published>2015-10-10T09:19:41.000Z</published>
    <updated>2016-11-16T09:24:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><ul>
<li>用户邮箱（企业邮箱）作为web系统用户标识，监控用户邮箱新邮件，转换为系统消息。</li>
</ul>
<h3 id="难点："><a href="#难点：" class="headerlink" title="难点："></a>难点：</h3><ol>
<li>其实也没啥难点，只是乍一看可能会转不过来</li>
<li>由于企业邮箱非web系统可以控制，网上亦有多人遇此需求而无方案，故而提出鄙人方案。</li>
<li>遇此需求，脑中闪现出第一方案，单独配置一个服务，每隔一段时间遍历所有用户邮箱，查看是否有新消息，如有则在消息表中生成数据，web平台根据新数据进行展示。缺点：用户数目过多时，压力过大，且邮箱中新邮件的频率不是特别大，故而没必要隔段时间遍历，且实现复杂。</li>
</ol>
<h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><ol>
<li>部署单独服务（非必要），创建用户填写邮箱授权的页面，编写接口进行对单个用户邮箱进行查询。</li>
<li>触发此服务，web平台每隔一段时间，触发1中接口。</li>
<li>如有新邮件，则在消息表中增加数据。</li>
<li>web平台自有消息提醒。</li>
<li>关于如何通过java进行邮箱访问，请自行研究。</li>
<li>最后请大家平时注重方案的构建能力，此方案思考用时半工作日，编码测试半工作日，不要因直观不能实现就轻易说  no  I cant，甚至<strong>理直气壮</strong>的说“不能实现”。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;需求：&quot;&gt;&lt;a href=&quot;#需求：&quot; class=&quot;headerlink&quot; title=&quot;需求：&quot;&gt;&lt;/a&gt;需求：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;用户邮箱（企业邮箱）作为web系统用户标识，监控用户邮箱新邮件，转换为系统消息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;
    
    </summary>
    
      <category term="方案" scheme="http://nudui.github.io/categories/%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="mail 邮箱消息" scheme="http://nudui.github.io/tags/mail-%E9%82%AE%E7%AE%B1%E6%B6%88%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>人才短租模式思考</title>
    <link href="http://nudui.github.io/2015/09/24/%E4%BA%BA%E6%89%8D%E7%9F%AD%E7%A7%9F%E6%A8%A1%E5%BC%8F%E6%80%9D%E8%80%83/"/>
    <id>http://nudui.github.io/2015/09/24/人才短租模式思考/</id>
    <published>2015-09-24T07:52:28.000Z</published>
    <updated>2016-11-16T09:23:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1，想法起因"><a href="#1，想法起因" class="headerlink" title="1，想法起因"></a>1，想法起因</h3><pre><code>（1）企业通过猎头招到的人，留职时间约一年（cison说，只能保障渡过试用期）。那么企业会觉不爽，体验变差。
（2）当下互联网盛行，人才思变，很难留职2年以上，一旦离职，个人信用值会降低，不离职，心中难受。
</code></pre><h3 id="2，解决办法：构建人才短租模式"><a href="#2，解决办法：构建人才短租模式" class="headerlink" title="2，解决办法：构建人才短租模式"></a>2，解决办法：构建人才短租模式</h3><pre><code>（1）对于企业来说，期望人才留职3年以上，但基本不可能，且猎头费依旧高昂。短租模式根据人才租约时间制定猎头费用，企业心理承受会好一些。
（2）对于中高端人才来说，基本只有猎头 + 内推方式换工作。通过猎头跳槽，心理预期也就是工作一年，期满再跳，不必担心个人信誉负担。
（3）总结起来一句话：窗户纸捅破，你究竟能接受多长时间。根据时长确定薪金与猎头服务费。
</code></pre><h3 id="3，产品玩法"><a href="#3，产品玩法" class="headerlink" title="3，产品玩法"></a>3，产品玩法</h3><pre><code>（1）依旧猎头模式。
（2）每个猎头手里有聊过的人才（能确定接受租约时长）。
（3）人才与平台签约。
</code></pre><h3 id="4，问题与挑战"><a href="#4，问题与挑战" class="headerlink" title="4，问题与挑战"></a>4，问题与挑战</h3><pre><code>（1）通过猎头入职人才的留职时间须调研。
（2）企业与人才对此模式的认可度，或曰企业与人才对此模式的接受时长。
（3）标准的建立。毕竟有越俎代庖嫌疑。
</code></pre><h3 id="5，愿景"><a href="#5，愿景" class="headerlink" title="5，愿景"></a>5，愿景</h3><pre><code>弱化企业-员工的概念，就像uber要弱化汽车所有权的概念一样。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1，想法起因&quot;&gt;&lt;a href=&quot;#1，想法起因&quot; class=&quot;headerlink&quot; title=&quot;1，想法起因&quot;&gt;&lt;/a&gt;1，想法起因&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;（1）企业通过猎头招到的人，留职时间约一年（cison说，只能保障渡过试用期）。那么企业会觉
    
    </summary>
    
      <category term="思考" scheme="http://nudui.github.io/categories/%E6%80%9D%E8%80%83/"/>
    
    
      <category term="思考" scheme="http://nudui.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>mac os 配置maven</title>
    <link href="http://nudui.github.io/2014/07/16/mac-os-%E9%85%8D%E7%BD%AEmaven/"/>
    <id>http://nudui.github.io/2014/07/16/mac-os-配置maven/</id>
    <published>2014-07-16T08:29:03.000Z</published>
    <updated>2016-11-16T09:24:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-下载maven-。"><a href="#1-下载maven-。" class="headerlink" title="1 : 下载maven 。"></a>1 : 下载maven 。</h3><p><a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">http://maven.apache.org/download.cgi</a></p>
<h3 id="2-解压"><a href="#2-解压" class="headerlink" title="2 : 解压"></a>2 : 解压</h3><p>解压到 /usr/local   重命名为maven</p>
<h3 id="3-新建（如无）-bash-profile-，"><a href="#3-新建（如无）-bash-profile-，" class="headerlink" title="3 : 新建（如无）.bash_profile ，"></a>3 : 新建（如无）.bash_profile ，</h3><p>编辑内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home</div><div class="line"></div><div class="line">M3_HOME=/usr/local/maven3</div><div class="line"></div><div class="line">PATH=$M3_HOME/bin:$PATH</div><div class="line"></div><div class="line">export JAVA_HOME</div><div class="line"></div><div class="line">export M3_HOME</div><div class="line"></div><div class="line">export PATH</div></pre></td></tr></table></figure>
<h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4 : 测试"></a>4 : 测试</h3><p><code>mvn -version</code></p>
<h3 id="5-如未生效"><a href="#5-如未生效" class="headerlink" title="5 : 如未生效"></a>5 : 如未生效</h3><p><code>source .bash_profile</code> 使之生效</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-下载maven-。&quot;&gt;&lt;a href=&quot;#1-下载maven-。&quot; class=&quot;headerlink&quot; title=&quot;1 : 下载maven 。&quot;&gt;&lt;/a&gt;1 : 下载maven 。&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://maven.apache.o
    
    </summary>
    
      <category term="maven" scheme="http://nudui.github.io/categories/maven/"/>
    
    
      <category term="maven" scheme="http://nudui.github.io/tags/maven/"/>
    
  </entry>
  
</feed>
